version: '3.5'

services:
  # --------------
  # zookeeper
  # --------------
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network
  # --------------
  # kafka
  # fonte: https://medium.com/@marcelo.hossomi/running-kafka-in-docker-machine-64d1501d6f0b
  # --------------
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS:
        "INTERNAL://kafka:9090,\
         EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS:
        "INTERNAL://kafka:9090,\
         EXTERNAL://dockervm:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:
        "INTERNAL:PLAINTEXT,\
         EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # --------------
  # registry
  # --------------
  discovery:
    build: ../registry/target
    ports:
      - "8761:8761"
    networks:
      - kafka-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  # --------------
  # mysql-container
  # --------------
  mysql-container:
    container_name: mysql-container
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'product'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'springuser'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'timao'
      # Password for root access
      MYSQL_ROOT_PASSWORD: '%'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    networks:
      - mysql-network
    volumes:
      - my-db:/var/lib/mysql
  # --------------
  # zuul proxy
  # --------------
  zuul:
    build: ../proxy/target
    ports:
      - "80:8080"
    links:
      - discovery
    networks:
      - kafka-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  # --------------
  # product
  # --------------
  product:
    build: ../product/target
    ports:
      - "8080"
    networks:
      - mysql-network
      - kafka-network
    links:
      - discovery
      - kafka
    depends_on:
      - mysql-container
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  # --------------
  # wishlist
  # --------------
  wishlist:
    build: ../wishlist/target
    ports:
      - "8080"
    networks:
      - mysql-network
      - kafka-network
    links:
      - discovery
      - kafka
    depends_on:
      - mysql-container
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  # --------------
  # cart
  # --------------
  cart:
    build: ../cart/target
    ports:
      - "8080"
    networks:
      - mysql-network
      - kafka-network
    links:
      - discovery
      - kafka
    depends_on:
      - mysql-container
    environment:
      - SPRING_PROFILES_ACTIVE=docker
# Names our volume
volumes:
  my-db:
networks:
  mysql-network:
    driver: bridge
  kafka-network:
    name: kafka-network
    driver: bridge